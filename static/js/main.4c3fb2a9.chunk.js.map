{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","setMovie","setTitle","isMovieLoading","setIsMovieLoading","isTitleCorrect","setIsTitleCorrect","loadMovie","a","query","fetch","then","res","json","catch","Response","Error","loadedMovie","Title","Poster","Plot","imdbID","handleAddMovie","useCallback","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","onClick","App","setMovies","isNewMovie","find","addedMovie","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c3fb2a9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import {\n  ChangeEvent,\n  FC,\n  useState,\n  useCallback,\n} from 'react';\n\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\nimport { getMovie } from '../../api';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const [title, setTitle] = useState('');\n  const [isMovieLoading, setIsMovieLoading] = useState(false);\n  const [isTitleCorrect, setIsTitleCorrect] = useState(true);\n\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleCorrect(true);\n  };\n\n  const loadMovie = async () => {\n    try {\n      setIsMovieLoading(true);\n\n      const loadedMovie = await getMovie(title);\n\n      if (!loadedMovie.Error) {\n        setIsTitleCorrect(true);\n\n        const {\n          Title,\n          Poster,\n          Plot,\n          imdbID,\n        } = loadedMovie;\n\n        const imdbUrl = `https://www.imdb.com/title/${imdbID}`;\n\n        const imgUrl = Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : Poster;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl,\n          imdbUrl,\n          imdbId: imdbID,\n        });\n      } else {\n        setIsTitleCorrect(false);\n      }\n    } finally {\n      setIsMovieLoading(false);\n    }\n  };\n\n  const handleTtitleSubmit = (event:ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    loadMovie();\n  };\n\n  const handleAddMovie = useCallback(() => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setTitle('');\n    setMovie(null);\n  }, [movie]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleTtitleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </div>\n\n          {\n            !isTitleCorrect\n            && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button',\n                'is-light',\n                { 'is-loading': isMovieLoading },\n              )}\n              disabled={!title}\n            >\n              {\n                !movie\n                  ? 'Find a movie'\n                  : 'Search again'\n              }\n            </button>\n          </div>\n\n          {\n            movie\n              && (\n                <div className=\"control\">\n                  <button\n                    data-cy=\"addButton\"\n                    type=\"button\"\n                    className=\"button is-primary\"\n                    onClick={handleAddMovie}\n                  >\n                    Add to the list\n                  </button>\n                </div>\n              )\n          }\n        </div>\n      </form>\n\n      {\n        movie\n          && (\n            <div className=\"container\" data-cy=\"previewContainer\">\n              <h2 className=\"title\">Preview</h2>\n              {\n                movie\n                && <MovieCard movie={movie} />\n              }\n            </div>\n          )\n      }\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=75a09dad';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import {\n  useState,\n  FC,\n} from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const isNewMovie = !movies\n      .find(addedMovie => addedMovie.title === movie?.title);\n\n    if (movie && isNewMovie) {\n      setMovies(state => (\n        [\n          ...state,\n          movie,\n        ]\n      ));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}